// Copyright 2012 Citrix Systems, Inc. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  Citrix Systems, Inc.
// reserves all rights not expressly granted by the License.
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.network.vpc;

import java.util.Date;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.cloud.api.Identity;
import com.cloud.utils.db.GenericDao;

/**
 * @author Alena Prokharchyk
 */

@Entity
@Table(name="static_routes")
public class StaticRouteVO implements Identity, StaticRoute{
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id")
    long id;
    
    @Column(name="uuid")
    String uuid;
    
    @Column(name="vpc_gateway_id", updatable=false)
    long vpcGatewayId;
    
    @Column(name="cidr")
    private String cidr;
    
    @Enumerated(value=EnumType.STRING)
    @Column(name="state")
    State state;
    
    @Column(name="vpc_id")
    private Long vpcId;
    
    @Column(name=GenericDao.CREATED_COLUMN)
    Date created;    
    
    /**
     * @param vpcGatewayId
     * @param cidr
     * @param vpcId
     */
    public StaticRouteVO(long vpcGatewayId, String cidr, Long vpcId) {
        super();
        this.vpcGatewayId = vpcGatewayId;
        this.cidr = cidr;
        this.state = State.Staged;
        this.vpcId = vpcId;
        this.uuid = UUID.randomUUID().toString();
    }
    
    @Override
    public long getVpcGatewayId() {
        return vpcGatewayId;
    }

    @Override
    public String getCidr() {
        return cidr;
    }

    @Override
    public State getState() {
        return state;
    }

    @Override
    public Long getVpcId() {
        return vpcId;
    }

    @Override
    public String getUuid() {
        return this.uuid;
    }

    @Override
    public long getId() {
        return id;
    }
}