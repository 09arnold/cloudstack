<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                         http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                                 http://www.springframework.org/schema/context
                                          http://www.springframework.org/schema/context/spring-context-3.0.xsd">
  <context:annotation-config />
  <context:component-scan base-package="org.apache.cloudstack.storage" />
  <context:component-scan base-package="org.apache.cloudstack.engine.subsystem.api.storage" />
  <context:component-scan base-package="com.cloud.utils.db" />
  <context:component-scan base-package="com.cloud.utils.component" />
  <context:component-scan base-package="com.cloud.host.dao" />
  <context:component-scan base-package="com.cloud.dc.dao" />
  <context:component-scan base-package="com.cloud.cluster.agentlb.dao" />
 
   <context:component-scan base-package=" com.cloud.upgrade.dao" />
  <tx:annotation-driven transaction-manager="transactionManager" />
  <bean id="aopTestBean" class="org.apache.cloudstack.storage.test.AopTestAdvice"/>
  <aop:config proxy-target-class="true" >
    <aop:aspect id="AopTestAdvice" ref="aopTestBean">
    <aop:pointcut id="aoptest"
      expression="@annotation(com.cloud.utils.db.DB)" />
      <aop:around pointcut-ref="aoptest" method="AopTestMethod"/> 
    </aop:aspect>
    

  </aop:config>
 

  <bean id="someDependencyMock" class="org.apache.cloudstack.storage.test.StorageFactoryBean">
    <constructor-arg name="classToBeMocked"
      value="org.apache.cloudstack.storage.volume.VolumeMotionService" />
  </bean>
  
  <bean class="org.apache.cloudstack.storage.test.ChildTestConfiguration" />
  
  <bean id="onwireRegistry" class="org.apache.cloudstack.framework.serializer.OnwireClassRegistry"
    init-method="scan" >
    <property name="packages">
      <list>
        <value>org.apache.cloudstack.framework</value>
      </list>
    </property>
  </bean>
  
  <bean id="messageSerializer" class="org.apache.cloudstack.framework.serializer.JsonMessageSerializer">
    <property name="onwireClassRegistry" ref="onwireRegistry" />
  </bean>

  <bean id="transportProvider" class="org.apache.cloudstack.framework.server.ServerTransportProvider"  init-method="initialize">
    <property name="workerPoolSize" value="5" />
    <property name="nodeId" value="Node1" />
    <property name="messageSerializer" ref="messageSerializer" />
  </bean>
  
  <bean id="rpcProvider" class="org.apache.cloudstack.framework.rpc.RpcProviderImpl" init-method="initialize">
    <constructor-arg ref="transportProvider" />
    <property name="messageSerializer" ref="messageSerializer" />
  </bean>

  <bean id="eventBus" class = "org.apache.cloudstack.framework.eventbus.EventBusBase" />

</beans>
